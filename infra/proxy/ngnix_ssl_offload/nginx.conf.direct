user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;


events {
    worker_connections 1024;
}

http {
    include         /etc/nginx/mime.types;
    default_type    application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;

    keepalive_timeout   65;
    types_hash_max_size 2048;

    #gzip                on;

    index   index.html index.htm;

    server {

        listen 443 default ssl;
        server_name www.my_domain.net;

        ssl on;
        ssl_certificate         /etc/pki/tls/certs/m_my_domain.crt;
        ssl_certificate_key     /etc/pki/tls/private/m_my_domain_net.key;
        ssl_protocols  SSLv2 SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;

        root         /usr/share/nginx/html;

        access_log  /var/log/nginx/host.access.log  main;

        location / {
        }

        # redirect server error pages to the static page /40x.html
        #
        error_page 404 /404.html;
        location = /40x.html {
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header X-Forwarded-Port $server_port;
        #proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect http://my_domain.net https://my_domain.net;

        location /app {
            proxy_pass   http://127.0.0.1:8000/app;
        }

        location /uaa {
            proxy_pass   http://127.0.0.1:19999/uaa;
        }

    }
}
